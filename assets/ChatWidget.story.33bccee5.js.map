{"version":3,"file":"ChatWidget.story.33bccee5.js","sources":["../../node_modules/@voiceflow/sdk-runtime/build/esm/runtime/runtime.interface.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/runtime/runtime.service.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/trace/trace.service.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/sdk/sdk.service.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/trace/trace.component.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/trace/components/choice.component.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/trace/components/text.component.js","../../node_modules/@voiceflow/sdk-runtime/build/esm/trace/components/visual.component.js","../../src/types/turn.ts","../../src/hooks/useRuntime.ts","../../src/views/ChatWidget/styled.ts","../../src/views/ChatWidget/index.tsx","../../src/views/ChatWidget/ChatWidget.story.tsx"],"sourcesContent":["export const RuntimeActionTypeSet = new Set(['launch', 'intent', 'text', '...etc']);\nexport const isRuntimeActionType = (value) => typeof value === 'string' && RuntimeActionTypeSet.has(value);\nexport const isRuntimeAction = (value) => typeof value === 'object' &&\n    Object.prototype.hasOwnProperty.call(value, 'type') &&\n    isRuntimeActionType(value.type);\nexport const isIntentAction = (value) => isRuntimeAction(value) && value.type === 'intent';\nexport const createIntentAction = (payload) => ({\n    type: 'intent',\n    payload,\n});\nexport const RuntimeTraceTypeSet = new Set([\n    'speak',\n    'text',\n    'choice',\n    'card',\n    'visual',\n    'audio',\n    'payload',\n    'stream',\n    'end',\n]);\nexport const isRuntimeTraceType = (value) => typeof value === 'string' && RuntimeTraceTypeSet.has(value);\nexport const isRuntimeTrace = (value) => typeof value === 'object' &&\n    Object.prototype.hasOwnProperty.call(value, 'type') &&\n    isRuntimeTraceType(value.type);\nexport const isCardTrace = (value) => isRuntimeTrace(value) && value.type === 'card';\nexport const isChoiceTrace = (value) => isRuntimeTrace(value) && value.type === 'choice';\nexport const isEndTrace = (value) => isRuntimeTrace(value) && value.type === 'end';\nexport const isPayloadTrace = (value) => isRuntimeTrace(value) && value.type === 'payload';\nexport const isSpeakTrace = (value) => isRuntimeTrace(value) && value.type === 'speak';\nexport const isTextTrace = (value) => isRuntimeTrace(value) && value.type === 'text';\nexport const isVisualTrace = (value) => isRuntimeTrace(value) && value.type === 'visual';\nexport const isStreamTrace = (value) => isRuntimeTrace(value) && value.type === 'stream';\n","import createHTTPError from 'http-errors';\nexport class RuntimeService {\n    constructor(options) {\n        this.options = options;\n        this.fetch = options.fetchPonyfill ?? globalThis.fetch?.bind(globalThis);\n        if (!this.fetch) {\n            throw new TypeError('fetch implementation was not provided and a global fetch was not available');\n        }\n    }\n    async send(path, args = {}) {\n        const url = new URL(path, this.options.url);\n        if (args.params)\n            url.search = args.params.toString();\n        const result = await this.fetch(url, {\n            method: args.method ?? 'GET',\n            body: args.body ? JSON.stringify(args.body) : undefined,\n            headers: {\n                'content-type': 'application/json',\n                ...(args.headers ?? {}),\n            },\n        });\n        const json = (await result.json().catch(() => null));\n        if (!result.ok) {\n            throw createHTTPError(result.status, result.statusText, json);\n        }\n        return json;\n    }\n    async interact(request) {\n        return this.send(`state/${request.versionID}/user/${request.sessionID}/interact`, {\n            method: 'POST',\n            body: {\n                action: request.action,\n                config: request.config,\n            },\n            headers: {\n                authorization: this.options.authorization,\n            },\n            params: new URLSearchParams({ verbose: 'true' }),\n        });\n    }\n}\n","export class TraceService {\n    constructor(options = {}) {\n        this.traces = [];\n        this.registerTraces(options.traces ?? []);\n    }\n    registerTrace(step) {\n        this.traces.push(step);\n        return this;\n    }\n    registerTraces(steps) {\n        steps.forEach((step) => this.registerTrace(step));\n        return this;\n    }\n    async processTrace(context, request, response) {\n        const meta = {\n            request,\n            state: response.state,\n            context,\n        };\n        for (const trace of response.trace) {\n            const step = this.traces.find((step) => step.canHandle(trace));\n            if (step) {\n                // eslint-disable-next-line no-await-in-loop\n                meta.context = await step.handle(meta, trace);\n            }\n        }\n        return meta.context;\n    }\n}\n","import { createIntentAction } from '../runtime/runtime.interface.js';\nimport { RuntimeService } from '../runtime/runtime.service.js';\nimport { TraceService } from '../trace/trace.service.js';\nexport class VoiceflowRuntime {\n    constructor(options) {\n        this.runtime = new RuntimeService(options);\n        this.trace = new TraceService(options);\n    }\n    registerStep(step) {\n        this.trace.registerTrace(step);\n        return this;\n    }\n    async interact(context, request) {\n        const response = await this.runtime.interact(request);\n        return this.trace.processTrace(context, request, response);\n    }\n    intent(request) {\n        return this.interact(request.context, {\n            action: createIntentAction(request.payload),\n            sessionID: request.sessionID,\n        });\n    }\n}\n","export const createTraceComponent = (type) => (handle) => {\n    if (typeof handle === 'function') {\n        return {\n            canHandle: (trace) => trace.type === type,\n            handle,\n        };\n    }\n    return handle;\n};\n","import { createTraceComponent } from '../trace.component.js';\nexport const ChoiceTraceComponent = createTraceComponent('choice');\n","import { createTraceComponent } from '../trace.component.js';\nexport const TextTraceComponent = createTraceComponent('text');\n","import { createTraceComponent } from '../trace.component.js';\nexport const VisualTraceComponent = createTraceComponent('visual');\n","import type { SystemResponseProps } from '@/components/SystemResponse';\nimport type { UserResponseProps } from '@/components/UserResponse';\n\nexport enum TurnType {\n  USER = 'user',\n  SYSTEM = 'system',\n}\n\nexport interface UserTurnProps extends UserResponseProps {\n  type: TurnType.USER;\n}\n\nexport interface SystemTurnProps extends Omit<SystemResponseProps, 'image'> {\n  type: TurnType.SYSTEM;\n  timestamp: Date;\n}\n\nexport type TurnProps = UserTurnProps | SystemTurnProps;\n","import {\n  ChoiceTraceComponent,\n  RuntimeAction,\n  RuntimeTrace,\n  TextTraceComponent,\n  VisualTraceComponent,\n  VoiceflowRuntime,\n  VoiceflowRuntimeOptions,\n} from '@voiceflow/sdk-runtime';\nimport cuid from 'cuid';\nimport { useMemo, useState } from 'react';\nimport { SetOptional } from 'type-fest';\n\nimport type { SystemResponseProps } from '@/components/SystemResponse';\nimport { TurnProps, TurnType } from '@/types';\n\nconst RUNTIME_URL = 'https://general-runtime.voiceflow.com';\n\ninterface RuntimeContext extends Pick<SystemResponseProps, 'messages' | 'actions'> {}\n\ninterface CardTrace {\n  title: string;\n  imageUrl?: string;\n  description: { text: string };\n  buttons: { name: string; request: RuntimeAction }[];\n}\n\ninterface CarouselTrace {\n  cards: CardTrace[];\n}\n\nexport interface RuntimeOptions extends SetOptional<VoiceflowRuntimeOptions<RuntimeContext>, 'url'> {\n  versionID: string;\n}\n\nconst createContext = (): RuntimeContext => ({\n  // timestamp: new Date(),\n  messages: [],\n});\n\nexport const useRuntime = ({ url = RUNTIME_URL, versionID, ...options }: RuntimeOptions) => {\n  const [turns, setTurns] = useState<TurnProps[]>([]);\n  const sessionID = useMemo(() => cuid(), []);\n\n  const runtime = useMemo(() => new VoiceflowRuntime<RuntimeContext>({ ...options, url }), [options.authorization]);\n  const interact = async (action: RuntimeAction): Promise<void> => {\n    const context = await runtime.interact(createContext(), { versionID, sessionID, action });\n\n    setTurns((prev) => [...prev, { type: TurnType.SYSTEM, timestamp: new Date(), ...context }]);\n  };\n  const reply = async (message: string, action: RuntimeAction): Promise<void> => {\n    setTurns((prev) => [...prev, { type: TurnType.USER, message }]);\n    await interact(action);\n  };\n\n  runtime.registerStep(\n    TextTraceComponent(({ context }, { payload: { message } }) => {\n      context.messages.push({ type: 'text', text: message });\n      return context;\n    })\n  );\n  runtime.registerStep(\n    VisualTraceComponent(({ context }, { payload: { image } }) => {\n      context.messages.push({ type: 'image', url: image });\n      return context;\n    })\n  );\n  runtime.registerStep(\n    ChoiceTraceComponent(({ context }, { payload: { buttons } }) => {\n      context.actions = (buttons as { name: string; request: RuntimeAction }[]).map(({ name, request }) => ({\n        label: name,\n        onClick: () => reply(name, request),\n      }));\n      return context;\n    })\n  );\n  runtime.registerStep({\n    canHandle: ({ type }) => type === 'cardV2',\n    handle: ({ context }, { payload: { title, imageUrl, description, buttons } }: RuntimeTrace<never, CardTrace>) => {\n      context.messages.push({\n        type: 'card',\n        title,\n        description: description.text,\n        image: imageUrl,\n        actions: buttons.map(({ name, request }) => ({ label: name, onClick: () => reply(name, request) })),\n      });\n      return context;\n    },\n  });\n  runtime.registerStep({\n    canHandle: ({ type }) => type === 'carousel',\n    handle: ({ context }, { payload: { cards } }: RuntimeTrace<never, CarouselTrace>) => {\n      context.messages.push({\n        type: 'carousel',\n        cards: cards.map(({ title, description, imageUrl, buttons }) => ({\n          title,\n          description: description.text,\n          image: imageUrl,\n          actions: buttons.map(({ name, request }) => ({ label: name, onClick: () => reply(name, request) })),\n        })),\n      });\n      return context;\n    },\n  });\n\n  const launch = async (): Promise<void> => interact({ type: 'launch', payload: null });\n  const sendMessage = async (message: string): Promise<void> => {\n    setTurns((prev) => [...prev, { type: TurnType.USER, message }]);\n    await interact({ type: 'text', payload: message });\n  };\n\n  return {\n    turns,\n    launch,\n    sendMessage,\n  };\n};\n","import Bubble from '@/components/Bubble';\nimport Chat from '@/components/Chat';\nimport { styled } from '@/styles';\n\nexport const Container = styled('div', {\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  zIndex: 10,\n  '-webkit-font-smoothing': 'antialiased',\n\n  [`& ${Bubble.Container}`]: {\n    color: '$white',\n  },\n\n  [`& ${Chat.Container}`]: {\n    height: 800,\n  },\n\n  [`& ${Chat.Dialog}`]: {\n    flex: 1,\n  },\n\n  [`\n    & > ${Bubble.Container},\n    & > ${Chat.Container}\n  `]: {\n    position: 'absolute',\n    right: '$6',\n    bottom: '$6',\n  },\n});\n","import { useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport * as R from 'remeda';\nimport { match } from 'ts-pattern';\n\nimport Bubble from '@/components/Bubble';\nimport Chat from '@/components/Chat';\nimport SystemResponse from '@/components/SystemResponse';\nimport UserResponse from '@/components/UserResponse';\nimport { RuntimeOptions, useRuntime } from '@/hooks';\nimport { TurnType } from '@/types';\n\nimport { Container } from './styled';\n\nexport interface ChatWidgetProps extends RuntimeOptions {\n  assistant: {\n    name: string;\n    description: string;\n    image: string;\n  };\n}\n\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ assistant, versionID, authorization }) => {\n  const [isOpen, setOpen] = useState(false);\n  const [isRunning, setRunning] = useState(false);\n  const startTime = useMemo(() => new Date(), []);\n  const runtime = useRuntime({ versionID, authorization });\n\n  const handleOpen = (): void => setOpen(true);\n  const handleMinimize = (): void => setOpen(false);\n  const handleStart = async (): Promise<void> => {\n    setRunning(true);\n    await runtime.launch();\n  };\n  const handleEnd = (): void => {\n    handleMinimize();\n    setRunning(false);\n  };\n\n  return createPortal(\n    <Container>\n      {isOpen ? (\n        <Chat\n          title={assistant.name}\n          description={assistant.description}\n          image={assistant.image}\n          startTime={startTime}\n          isRunning={isRunning}\n          onStart={handleStart}\n          onEnd={handleEnd}\n          onSend={runtime.sendMessage}\n          onMinimize={handleMinimize}\n        >\n          {runtime.turns.map((turn, index) =>\n            match(turn)\n              .with({ type: TurnType.USER }, (props) => <UserResponse {...R.omit(props, ['type'])} key={index} />)\n              .with({ type: TurnType.SYSTEM }, (props) => (\n                <SystemResponse {...R.omit(props, ['type'])} image={assistant.image} animated key={index} />\n              ))\n              .exhaustive()\n          )}\n        </Chat>\n      ) : (\n        <Bubble svg=\"launch\" onClick={handleOpen} />\n      )}\n    </Container>,\n    document.body\n  );\n};\n\nexport default Object.assign(ChatWidget, {\n  Container,\n});\n","import { ComponentMeta, ComponentStory } from '@storybook/react';\n\nimport ChatWidget from '.';\n\nexport default {\n  title: 'Views/ChatWidget',\n  component: ChatWidget,\n  args: {\n    versionID: '',\n    authorization: '',\n    assistant: {\n      name: 'Assistant Name',\n      image: 'https://source.unsplash.com/random/72x72',\n      description: \"Voiceflow's virtual assistant is here to help.\",\n    },\n  },\n} as ComponentMeta<typeof ChatWidget>;\n\nconst Template: ComponentStory<typeof ChatWidget> = (args) => <ChatWidget {...args} />;\n\nexport const Default = Template.bind({});\nDefault.args = {};\n"],"names":["createIntentAction","payload","RuntimeService","options","_b","_a","path","args","url","result","json","createHTTPError","request","TraceService","step","steps","context","response","meta","trace","VoiceflowRuntime","createTraceComponent","type","handle","ChoiceTraceComponent","TextTraceComponent","VisualTraceComponent","TurnType","RUNTIME_URL","createContext","useRuntime","versionID","turns","setTurns","useState","sessionID","useMemo","cuid","runtime","interact","action","prev","reply","message","image","buttons","name","title","imageUrl","description","cards","Container","styled","Bubble","Chat","ChatWidget","assistant","isOpen","setOpen","isRunning","setRunning","startTime","authorization","handleOpen","handleMinimize","handleStart","handleEnd","createPortal","_jsx","sendMessage","USER","R","index","SYSTEM","ChatWidget$1","ChatWidget_story","component","Template","Default","bind"],"mappings":"0mBAMO,MAAMA,EAAsBC,IAAa,CAC5C,KAAM,SACN,QAAAA,CACJ,GCRO,MAAMC,CAAe,CACxB,YAAYC,EAAS,SAGjB,GAFA,KAAK,QAAUA,EACf,KAAK,OAAQC,EAAAD,EAAQ,gBAAR,KAAAC,GAAyBC,EAAA,WAAW,QAAX,YAAAA,EAAkB,KAAK,YACzD,CAAC,KAAK,MACN,MAAM,IAAI,UAAU,4EAA4E,CAEvG,CACD,MAAM,KAAKC,EAAMC,EAAO,GAAI,SACxB,MAAMC,EAAM,IAAI,IAAIF,EAAM,KAAK,QAAQ,GAAG,EACtCC,EAAK,SACLC,EAAI,OAASD,EAAK,OAAO,SAAQ,GACrC,MAAME,EAAS,MAAM,KAAK,MAAMD,EAAK,CACjC,QAAQH,EAAAE,EAAK,SAAL,KAAAF,EAAe,MACvB,KAAME,EAAK,KAAO,KAAK,UAAUA,EAAK,IAAI,EAAI,OAC9C,QAAS,CACL,eAAgB,mBAChB,IAAIH,EAAAG,EAAK,UAAL,KAAAH,EAAgB,EACvB,CACb,CAAS,EACKM,EAAQ,MAAMD,EAAO,KAAM,EAAC,MAAM,IAAM,IAAI,EAClD,GAAI,CAACA,EAAO,GACR,MAAME,EAAgBF,EAAO,OAAQA,EAAO,WAAYC,CAAI,EAEhE,OAAOA,CACV,CACD,MAAM,SAASE,EAAS,CACpB,OAAO,KAAK,KAAK,SAASA,EAAQ,kBAAkBA,EAAQ,qBAAsB,CAC9E,OAAQ,OACR,KAAM,CACF,OAAQA,EAAQ,OAChB,OAAQA,EAAQ,MACnB,EACD,QAAS,CACL,cAAe,KAAK,QAAQ,aAC/B,EACD,OAAQ,IAAI,gBAAgB,CAAE,QAAS,MAAM,CAAE,CAC3D,CAAS,CACJ,CACL,CCxCO,MAAMC,CAAa,CACtB,YAAYV,EAAU,GAAI,OACtB,KAAK,OAAS,GACd,KAAK,gBAAeE,EAAAF,EAAQ,SAAR,KAAAE,EAAkB,CAAE,CAAA,CAC3C,CACD,cAAcS,EAAM,CAChB,YAAK,OAAO,KAAKA,CAAI,EACd,IACV,CACD,eAAeC,EAAO,CAClB,OAAAA,EAAM,QAASD,GAAS,KAAK,cAAcA,CAAI,CAAC,EACzC,IACV,CACD,MAAM,aAAaE,EAASJ,EAASK,EAAU,CAC3C,MAAMC,EAAO,CACT,QAAAN,EACA,MAAOK,EAAS,MAChB,QAAAD,CACZ,EACQ,UAAWG,KAASF,EAAS,MAAO,CAChC,MAAMH,EAAO,KAAK,OAAO,KAAMA,GAASA,EAAK,UAAUK,CAAK,CAAC,EACzDL,IAEAI,EAAK,QAAU,MAAMJ,EAAK,OAAOI,EAAMC,CAAK,EAEnD,CACD,OAAOD,EAAK,OACf,CACL,CCzBO,MAAME,CAAiB,CAC1B,YAAYjB,EAAS,CACjB,KAAK,QAAU,IAAID,EAAeC,CAAO,EACzC,KAAK,MAAQ,IAAIU,EAAaV,CAAO,CACxC,CACD,aAAaW,EAAM,CACf,YAAK,MAAM,cAAcA,CAAI,EACtB,IACV,CACD,MAAM,SAASE,EAASJ,EAAS,CAC7B,MAAMK,EAAW,MAAM,KAAK,QAAQ,SAASL,CAAO,EACpD,OAAO,KAAK,MAAM,aAAaI,EAASJ,EAASK,CAAQ,CAC5D,CACD,OAAOL,EAAS,CACZ,OAAO,KAAK,SAASA,EAAQ,QAAS,CAClC,OAAQZ,EAAmBY,EAAQ,OAAO,EAC1C,UAAWA,EAAQ,SAC/B,CAAS,CACJ,CACL,CCtBO,MAAMS,EAAwBC,GAAUC,GACvC,OAAOA,GAAW,WACX,CACH,UAAYJ,GAAUA,EAAM,OAASG,EACrC,OAAAC,CACZ,EAEWA,ECNEC,EAAuBH,EAAqB,QAAQ,ECApDI,EAAqBJ,EAAqB,MAAM,ECAhDK,EAAuBL,EAAqB,QAAQ,ECErD,IAAAM,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,OAAS,SAFCA,IAAAA,GAAA,CAAA,CAAA,ECaZ,MAAMC,EAAc,wCAmBdC,EAAgB,KAAuB,CAE3C,SAAU,CAAC,CACb,GAEaC,EAAa,CAAC,CAAE,IAAAtB,EAAMoB,EAAa,UAAAG,KAAc5B,KAA8B,CAC1F,KAAM,CAAC6B,EAAOC,CAAQ,EAAIC,EAAA,QAAA,SAAsB,CAAE,CAAA,EAC5CC,EAAYC,EAAQ,QAAA,QAAA,IAAMC,EAAK,EAAG,CAAE,CAAA,EAEpCC,EAAUF,EAAAA,QAAAA,QAAQ,IAAM,IAAIhB,EAAiC,CAAE,GAAGjB,EAAS,IAAAK,CAAK,CAAA,EAAG,CAACL,EAAQ,aAAa,CAAC,EAC1GoC,EAAW,MAAOC,GAAyC,CACzD,MAAAxB,EAAU,MAAMsB,EAAQ,SAAST,IAAiB,CAAE,UAAAE,EAAW,UAAAI,EAAW,OAAAK,CAAA,CAAQ,EAExFP,EAAUQ,GAAS,CAAC,GAAGA,EAAM,CAAE,KAAMd,EAAS,OAAQ,UAAW,IAAI,KAAQ,GAAGX,CAAA,CAAS,CAAC,CAAA,EAEtF0B,EAAQ,MAAOC,EAAiBH,IAAyC,CACpEP,EAACQ,GAAS,CAAC,GAAGA,EAAM,CAAE,KAAMd,EAAS,KAAM,QAAAgB,CAAS,CAAA,CAAC,EAC9D,MAAMJ,EAASC,CAAM,CAAA,EAGf,OAAAF,EAAA,aACNb,EAAmB,CAAC,CAAE,QAAAT,CAAQ,EAAG,CAAE,QAAS,CAAE,QAAA2B,CAAQ,MACpD3B,EAAQ,SAAS,KAAK,CAAE,KAAM,OAAQ,KAAM2B,EAAS,EAC9C3B,EACR,CAAA,EAEKsB,EAAA,aACNZ,EAAqB,CAAC,CAAE,QAAAV,CAAQ,EAAG,CAAE,QAAS,CAAE,MAAA4B,CAAM,MACpD5B,EAAQ,SAAS,KAAK,CAAE,KAAM,QAAS,IAAK4B,EAAO,EAC5C5B,EACR,CAAA,EAEKsB,EAAA,aACNd,EAAqB,CAAC,CAAE,QAAAR,CAAQ,EAAG,CAAE,QAAS,CAAE,QAAA6B,CAAQ,MACtD7B,EAAQ,QAAW6B,EAAuD,IAAI,CAAC,CAAE,KAAAC,EAAM,QAAAlC,MAAe,CACpG,MAAOkC,EACP,QAAS,IAAMJ,EAAMI,EAAMlC,CAAO,CAClC,EAAA,EACKI,EACR,CAAA,EAEHsB,EAAQ,aAAa,CACnB,UAAW,CAAC,CAAE,KAAAhB,KAAWA,IAAS,SAClC,OAAQ,CAAC,CAAE,QAAAN,CAAW,EAAA,CAAE,QAAS,CAAE,MAAA+B,EAAO,SAAAC,EAAU,YAAAC,EAAa,QAAAJ,CAAA,MAC/D7B,EAAQ,SAAS,KAAK,CACpB,KAAM,OACN,MAAA+B,EACA,YAAaE,EAAY,KACzB,MAAOD,EACP,QAASH,EAAQ,IAAI,CAAC,CAAE,KAAAC,EAAM,QAAAlC,CAAQ,KAAO,CAAE,MAAOkC,EAAM,QAAS,IAAMJ,EAAMI,EAAMlC,CAAO,GAAI,CAAA,CACnG,EACMI,EACT,CACD,EACDsB,EAAQ,aAAa,CACnB,UAAW,CAAC,CAAE,KAAAhB,KAAWA,IAAS,WAClC,OAAQ,CAAC,CAAE,QAAAN,CAAQ,EAAG,CAAE,QAAS,CAAE,MAAAkC,CAAM,MACvClC,EAAQ,SAAS,KAAK,CACpB,KAAM,WACN,MAAOkC,EAAM,IAAI,CAAC,CAAE,MAAAH,EAAO,YAAAE,EAAa,SAAAD,EAAU,QAAAH,MAAe,CAC/D,MAAAE,EACA,YAAaE,EAAY,KACzB,MAAOD,EACP,QAASH,EAAQ,IAAI,CAAC,CAAE,KAAAC,EAAM,QAAAlC,CAAQ,KAAO,CAAE,MAAOkC,EAAM,QAAS,IAAMJ,EAAMI,EAAMlC,CAAO,GAAI,CAAA,EAClG,CAAA,CACH,EACMI,EACT,CACD,EAQM,CACL,MAAAgB,EACA,OARa,SAA2BO,EAAS,CAAE,KAAM,SAAU,QAAS,KAAM,EASlF,YARkB,MAAOI,GAAmC,CACnDV,EAACQ,GAAS,CAAC,GAAGA,EAAM,CAAE,KAAMd,EAAS,KAAM,QAAAgB,CAAS,CAAA,CAAC,EAC9D,MAAMJ,EAAS,CAAE,KAAM,OAAQ,QAASI,EAAS,CAAA,CAMjD,CAEJ,EChHaQ,EAAYC,EAAO,MAAO,CACrC,SAAU,QACV,IAAK,EACL,OAAQ,EACR,KAAM,EACN,MAAO,EACP,OAAQ,GACR,yBAA0B,cAE1B,CAAC,KAAKC,EAAO,aAAc,CACzB,MAAO,QACT,EAEA,CAAC,KAAKC,EAAK,aAAc,CACvB,OAAQ,GACV,EAEA,CAAC,KAAKA,EAAK,UAAW,CACpB,KAAM,CACR,EAEA,CAAC;AAAA,UACOD,EAAO;AAAA,UACPC,EAAK;AAAA,KACT,CACF,SAAU,WACV,MAAO,KACP,OAAQ,IACV,CACF,CAAC,ECXDC,EAAA,CAAA,CAA+C,UAAAC,EAAEA,UAAAA,EAAWzB,cAAAA,CAAb,IAAA,CAC7C,KAAA,CAAA0B,EAAAC,CAAA,EAAAxB,EAAA,QAAA,SAAA,EAAA,EACA,CAAAyB,EAAAC,CAAA,EAAA1B,EAAA,QAAA,SAAA,EAAA,EACA2B,EAAAzB,EAAAA,QAAAA,QAAA,IAAA,IAAA,KAAA,CAAA,CAAA,EACAE,EAAAR,EAAA,CAA2B,UAAAC,EAAEA,cAAAA,CAAW+B,CAAAA,EAExCC,EAAA,IAAAL,EAAA,EAAA,EACAM,EAAA,IAAAN,EAAA,EAAA,EACAO,EAAA,SAAA,CACEL,EAAAA,EAAAA,EACA,MAAAtB,EAAA,QAAA,EAEF4B,EAAA,IAAA,CACEF,IACAJ,EAAAA,EAAAA,CAAU,EAGZ,OAAAO,EAAA,QAAA,aAAAC,EAAAjB,EAAA,CACE,SAAAM,EAAAW,EAAAd,EAAA,CAEI,MAAAE,EAAA,KACmBV,YAAAA,EAAAA,YACMG,MAAAA,EAAAA,MACNL,UAAAA,EACjB,UAAAe,EACA,QAAAM,EACSA,MAAAA,EACFC,OAAAA,EAAAA,YACSG,WAAAA,EACJL,SAAAA,EAAAA,MAAAA,IAAAA,CAAAA,EAAAA,IAAAA,EAAAA,CAAAA,EAAAA,KAAAA,CAIF,KAAArC,EAAA,IAAiB2C,EAAAA,GAAAA,EAAAA,QAAAA,cAAAA,EAAAA,CAAqCC,GAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,EAAA,IAAAC,CAA8BA,CAAAA,CAAAA,EAAAA,KAAAA,CACpF,KAAA7C,EAAA,MAAiB8C,EAAAA,GAAAA,EAAAA,QAAAA,cAAAA,EAAAA,CACDF,GAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,EAAA,MAAAf,EAAA,MAA0CZ,SAAAA,GAA9D,IAAA4B,CAAmFA,CAAAA,CAAAA,EAAAA,YAAAA,CAJxF,CAAA,EAAAJ,EAAAf,EAAA,CAUH,IAAA,SAAY,QAAAU,CAAkBA,CAAAA,CAA9B,CAAA,EAAA,SAAA,IAAA,CAKP,EAEDW,EAAA,OAAA,OAAAnB,EAAA,CAAyC,UAAAJ,CAAA,CAAA,46BClEzC,MAAewB,GAAA,CACb5B,MAAO,mBACP6B,UAAWrB,EACXhD,KAAM,CACJwB,UAAW,GACX+B,cAAe,GACfN,UAAW,CACTV,KAAM,iBACNF,MAAO,2CACPK,YAAa,gDAHJ,CAHP,CAHO,EAcT4B,EAAwDtE,GAAA6D,EAACb,EAAehD,CAAAA,GAAAA,CAAhB,CAA9D,EAEauE,EAAUD,EAASE,KAAK,EAAd,EACvBD,EAAQvE,KAAO,CAAf"}