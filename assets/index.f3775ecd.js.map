{"version":3,"file":"index.f3775ecd.js","sources":["../../src/components/Message/styled.ts","../../src/components/Message/ChatMessage.ts","../../src/components/Message/constants.ts","../../src/components/Message/DebugMesage.ts","../../src/components/Message/index.ts"],"sourcesContent":["import { styled } from '@/styles';\n\nexport const Container = styled('div', {\n  display: 'inline-block',\n  padding: '10px 14px',\n  borderRadius: '$1',\n  typo: {},\n});\n","import { styled } from '@/styles';\n\nimport { Container } from './styled';\n\nexport const ChatMessage = styled(Container, {\n  variants: {\n    from: {\n      system: {\n        color: '$black',\n        backgroundColor: '$lightGrey',\n      },\n\n      user: {\n        color: '$white',\n        backgroundColor: '$primary',\n      },\n    },\n  },\n  defaultVariants: {\n    from: 'system',\n  },\n});\n","export enum MessageVariant {\n  CHAT = 'chat',\n  DEBUG = 'debug',\n}\n","import { CSS, styled } from '@/styles';\n\nimport { Container } from './styled';\n\nconst SIZE = 16;\nconst OFFSET = 32;\n\nconst caretStyles: CSS = {\n  content: '',\n  position: 'absolute',\n  height: 0,\n  width: 0,\n  borderLeft: `${SIZE / 2}px solid transparent`,\n  borderRight: `${SIZE / 2}px solid transparent`,\n  borderTop: `${SIZE / 2}px solid transparent`,\n};\n\nexport const DebugMessage = styled(Container, {\n  position: 'relative',\n  marginTop: SIZE / 2,\n  border: '1px solid $medGrey',\n  padding: '10px 14px',\n  backgroundColor: '$white',\n  boxShadow: '0 1px 2px $shadow2',\n\n  '&::before': {\n    ...caretStyles,\n    top: -SIZE,\n    borderBottom: `${SIZE / 2}px solid $medGrey`,\n  },\n\n  '&::after': {\n    ...caretStyles,\n    top: -SIZE + 1.5,\n    borderBottom: `${SIZE / 2}px solid $white`,\n  },\n\n  variants: {\n    orientation: {\n      left: {\n        '&::before': {\n          left: OFFSET,\n        },\n        '&::after': {\n          left: OFFSET,\n        },\n      },\n      right: {\n        '&::before': {\n          right: OFFSET,\n        },\n        '&::after': {\n          right: OFFSET,\n        },\n      },\n    },\n  },\n  defaultVariants: {\n    orientation: 'left',\n  },\n});\n","import { bindVariants } from '@/utils/variants';\n\nimport { ChatMessage } from './ChatMessage';\nimport { MessageVariant } from './constants';\nimport { DebugMessage } from './DebugMesage';\nimport { Container } from './styled';\n\nconst VARIANTS = {\n  [MessageVariant.CHAT]: ChatMessage,\n  [MessageVariant.DEBUG]: DebugMessage,\n};\n\nconst Message = bindVariants(VARIANTS, MessageVariant.CHAT);\n\nexport default Object.assign(Message, {\n  Variant: MessageVariant,\n\n  Container,\n  Chat: ChatMessage,\n  Debug: DebugMessage,\n});\n"],"names":["Container","styled","ChatMessage","MessageVariant","SIZE","OFFSET","caretStyles","DebugMessage","VARIANTS","Message","bindVariants","Message$1"],"mappings":"mFAEa,MAAAA,EAAYC,EAAO,MAAO,CACrC,QAAS,eACT,QAAS,YACT,aAAc,KACd,KAAM,CAAC,CACT,CAAC,ECHYC,EAAcD,EAAOD,EAAW,CAC3C,SAAU,CACR,KAAM,CACJ,OAAQ,CACN,MAAO,SACP,gBAAiB,YACnB,EAEA,KAAM,CACJ,MAAO,SACP,gBAAiB,UACnB,CACF,CACF,EACA,gBAAiB,CACf,KAAM,QACR,CACF,CAAC,ECrBW,IAAAG,GAAAA,IACVA,EAAA,KAAO,OACPA,EAAA,MAAQ,QAFEA,IAAAA,GAAA,CAAA,CAAA,ECIZ,MAAMC,EAAO,GACPC,EAAS,GAETC,EAAmB,CACvB,QAAS,GACT,SAAU,WACV,OAAQ,EACR,MAAO,EACP,WAAY,GAAGF,EAAO,wBACtB,YAAa,GAAGA,EAAO,wBACvB,UAAW,GAAGA,EAAO,uBACvB,EAEaG,EAAeN,EAAOD,EAAW,CAC5C,SAAU,WACV,UAAWI,EAAO,EAClB,OAAQ,qBACR,QAAS,YACT,gBAAiB,SACjB,UAAW,qBAEX,YAAa,CACX,GAAGE,EACH,IAAK,CAACF,EACN,aAAc,GAAGA,EAAO,oBAC1B,EAEA,WAAY,CACV,GAAGE,EACH,IAAK,CAACF,EAAO,IACb,aAAc,GAAGA,EAAO,kBAC1B,EAEA,SAAU,CACR,YAAa,CACX,KAAM,CACJ,YAAa,CACX,KAAMC,CACR,EACA,WAAY,CACV,KAAMA,CACR,CACF,EACA,MAAO,CACL,YAAa,CACX,MAAOA,CACT,EACA,WAAY,CACV,MAAOA,CACT,CACF,CACF,CACF,EACA,gBAAiB,CACf,YAAa,MACf,CACF,CAAC,ECrDKG,EAAW,CACf,CAACL,EAAe,MAAOD,EACvB,CAACC,EAAe,OAAQI,CAC1B,EAEME,EAAUC,EAAaF,EAAUL,EAAe,IAAI,EAE1DQ,EAAe,OAAO,OAAOF,EAAS,CACpC,QAASN,EAET,UAAAH,EACA,KAAME,EACN,MAAOK,CACT,CAAC"}